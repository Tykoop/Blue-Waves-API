// <auto-generated />
using System;

using Microsoft.EntityFrameworkCore.Migrations;

using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Esentis.BlueWaves.Persistence.Migrations
{
	public partial class PersistsDevices_ManyToManyCleanup : Migration
	{
		protected override void Up(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.DropForeignKey(
				name: "FK_Beaches_AspNetUsers_AddedById",
				table: "Beaches");

			migrationBuilder.DropForeignKey(
				name: "FK_Favorites_AspNetUsers_UserId",
				table: "Favorites");

			migrationBuilder.DropForeignKey(
				name: "FK_Favorites_Beaches_BeachId",
				table: "Favorites");

			migrationBuilder.DropForeignKey(
				name: "FK_Ratings_AspNetUsers_UserId",
				table: "Ratings");

			migrationBuilder.DropForeignKey(
				name: "FK_Ratings_Beaches_BeachId",
				table: "Ratings");

			migrationBuilder.DropPrimaryKey(
				name: "PK_Ratings",
				table: "Ratings");

			migrationBuilder.DropIndex(
				name: "IX_Ratings_UserId",
				table: "Ratings");

			migrationBuilder.DropPrimaryKey(
				name: "PK_Favorites",
				table: "Favorites");

			migrationBuilder.DropIndex(
				name: "IX_Favorites_UserId",
				table: "Favorites");

			migrationBuilder.DropIndex(
				name: "IX_Beaches_AddedById",
				table: "Beaches");

			migrationBuilder.DropColumn(
				name: "Id",
				table: "Ratings");

			migrationBuilder.DropColumn(
				name: "Id",
				table: "Favorites");

			migrationBuilder.DropColumn(
				name: "AddedById",
				table: "Beaches");

			migrationBuilder.DropColumn(
				name: "RefreshToken",
				table: "AspNetUsers");

			migrationBuilder.DropColumn(
				name: "RefreshTokenExpiration",
				table: "AspNetUsers");

			migrationBuilder.AlterColumn<Guid>(
				name: "UserId",
				table: "Ratings",
				type: "uuid",
				nullable: false,
				defaultValue: new Guid("00000000-0000-0000-0000-000000000000"),
				oldClrType: typeof(Guid),
				oldType: "uuid",
				oldNullable: true);

			migrationBuilder.AlterColumn<long>(
				name: "BeachId",
				table: "Ratings",
				type: "bigint",
				nullable: false,
				defaultValue: 0L,
				oldClrType: typeof(long),
				oldType: "bigint",
				oldNullable: true);

			migrationBuilder.AlterColumn<Guid>(
				name: "UserId",
				table: "Favorites",
				type: "uuid",
				nullable: false,
				defaultValue: new Guid("00000000-0000-0000-0000-000000000000"),
				oldClrType: typeof(Guid),
				oldType: "uuid",
				oldNullable: true);

			migrationBuilder.AlterColumn<long>(
				name: "BeachId",
				table: "Favorites",
				type: "bigint",
				nullable: false,
				defaultValue: 0L,
				oldClrType: typeof(long),
				oldType: "bigint",
				oldNullable: true);

			migrationBuilder.AddColumn<Guid>(
				name: "CreatedBy",
				table: "Beaches",
				type: "uuid",
				nullable: false,
				defaultValue: new Guid("00000000-0000-0000-0000-000000000000"));

			migrationBuilder.AddColumn<Guid>(
				name: "UpdatedBy",
				table: "Beaches",
				type: "uuid",
				nullable: false,
				defaultValue: new Guid("00000000-0000-0000-0000-000000000000"));

			migrationBuilder.AddPrimaryKey(
				name: "PK_Ratings",
				table: "Ratings",
				columns: new[] { "UserId", "BeachId" });

			migrationBuilder.AddPrimaryKey(
				name: "PK_Favorites",
				table: "Favorites",
				columns: new[] { "UserId", "BeachId" });

			migrationBuilder.CreateTable(
				name: "Devices",
				columns: table => new
				{
					Id = table.Column<long>(type: "bigint", nullable: false)
						.Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
					Name = table.Column<string>(type: "text", nullable: false),
					UserId = table.Column<Guid>(type: "uuid", nullable: true),
					RefreshToken = table.Column<Guid>(type: "uuid", nullable: false),
					CreatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false),
					UpdatedAt = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: false)
				},
				constraints: table =>
				{
					table.PrimaryKey("PK_Devices", x => x.Id);
					table.ForeignKey(
						name: "FK_Devices_AspNetUsers_UserId",
						column: x => x.UserId,
						principalTable: "AspNetUsers",
						principalColumn: "Id",
						onDelete: ReferentialAction.Restrict);
				});

			migrationBuilder.CreateIndex(
				name: "IX_Devices_UserId",
				table: "Devices",
				column: "UserId");

			migrationBuilder.AddForeignKey(
				name: "FK_Favorites_AspNetUsers_UserId",
				table: "Favorites",
				column: "UserId",
				principalTable: "AspNetUsers",
				principalColumn: "Id",
				onDelete: ReferentialAction.Cascade);

			migrationBuilder.AddForeignKey(
				name: "FK_Favorites_Beaches_BeachId",
				table: "Favorites",
				column: "BeachId",
				principalTable: "Beaches",
				principalColumn: "Id",
				onDelete: ReferentialAction.Cascade);

			migrationBuilder.AddForeignKey(
				name: "FK_Ratings_AspNetUsers_UserId",
				table: "Ratings",
				column: "UserId",
				principalTable: "AspNetUsers",
				principalColumn: "Id",
				onDelete: ReferentialAction.Cascade);

			migrationBuilder.AddForeignKey(
				name: "FK_Ratings_Beaches_BeachId",
				table: "Ratings",
				column: "BeachId",
				principalTable: "Beaches",
				principalColumn: "Id",
				onDelete: ReferentialAction.Cascade);
		}

		protected override void Down(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.DropForeignKey(
				name: "FK_Favorites_AspNetUsers_UserId",
				table: "Favorites");

			migrationBuilder.DropForeignKey(
				name: "FK_Favorites_Beaches_BeachId",
				table: "Favorites");

			migrationBuilder.DropForeignKey(
				name: "FK_Ratings_AspNetUsers_UserId",
				table: "Ratings");

			migrationBuilder.DropForeignKey(
				name: "FK_Ratings_Beaches_BeachId",
				table: "Ratings");

			migrationBuilder.DropTable(
				name: "Devices");

			migrationBuilder.DropPrimaryKey(
				name: "PK_Ratings",
				table: "Ratings");

			migrationBuilder.DropPrimaryKey(
				name: "PK_Favorites",
				table: "Favorites");

			migrationBuilder.DropColumn(
				name: "CreatedBy",
				table: "Beaches");

			migrationBuilder.DropColumn(
				name: "UpdatedBy",
				table: "Beaches");

			migrationBuilder.AlterColumn<long>(
				name: "BeachId",
				table: "Ratings",
				type: "bigint",
				nullable: true,
				oldClrType: typeof(long),
				oldType: "bigint");

			migrationBuilder.AlterColumn<Guid>(
				name: "UserId",
				table: "Ratings",
				type: "uuid",
				nullable: true,
				oldClrType: typeof(Guid),
				oldType: "uuid");

			migrationBuilder.AddColumn<long>(
				name: "Id",
				table: "Ratings",
				type: "bigint",
				nullable: false,
				defaultValue: 0L)
				.Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

			migrationBuilder.AlterColumn<long>(
				name: "BeachId",
				table: "Favorites",
				type: "bigint",
				nullable: true,
				oldClrType: typeof(long),
				oldType: "bigint");

			migrationBuilder.AlterColumn<Guid>(
				name: "UserId",
				table: "Favorites",
				type: "uuid",
				nullable: true,
				oldClrType: typeof(Guid),
				oldType: "uuid");

			migrationBuilder.AddColumn<long>(
				name: "Id",
				table: "Favorites",
				type: "bigint",
				nullable: false,
				defaultValue: 0L)
				.Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

			migrationBuilder.AddColumn<Guid>(
				name: "AddedById",
				table: "Beaches",
				type: "uuid",
				nullable: true);

			migrationBuilder.AddColumn<string>(
				name: "RefreshToken",
				table: "AspNetUsers",
				type: "text",
				nullable: false,
				defaultValue: "");

			migrationBuilder.AddColumn<DateTimeOffset>(
				name: "RefreshTokenExpiration",
				table: "AspNetUsers",
				type: "timestamp with time zone",
				nullable: false,
				defaultValue: new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)));

			migrationBuilder.AddPrimaryKey(
				name: "PK_Ratings",
				table: "Ratings",
				column: "Id");

			migrationBuilder.AddPrimaryKey(
				name: "PK_Favorites",
				table: "Favorites",
				column: "Id");

			migrationBuilder.CreateIndex(
				name: "IX_Ratings_UserId",
				table: "Ratings",
				column: "UserId");

			migrationBuilder.CreateIndex(
				name: "IX_Favorites_UserId",
				table: "Favorites",
				column: "UserId");

			migrationBuilder.CreateIndex(
				name: "IX_Beaches_AddedById",
				table: "Beaches",
				column: "AddedById");

			migrationBuilder.AddForeignKey(
				name: "FK_Beaches_AspNetUsers_AddedById",
				table: "Beaches",
				column: "AddedById",
				principalTable: "AspNetUsers",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);

			migrationBuilder.AddForeignKey(
				name: "FK_Favorites_AspNetUsers_UserId",
				table: "Favorites",
				column: "UserId",
				principalTable: "AspNetUsers",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);

			migrationBuilder.AddForeignKey(
				name: "FK_Favorites_Beaches_BeachId",
				table: "Favorites",
				column: "BeachId",
				principalTable: "Beaches",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);

			migrationBuilder.AddForeignKey(
				name: "FK_Ratings_AspNetUsers_UserId",
				table: "Ratings",
				column: "UserId",
				principalTable: "AspNetUsers",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);

			migrationBuilder.AddForeignKey(
				name: "FK_Ratings_Beaches_BeachId",
				table: "Ratings",
				column: "BeachId",
				principalTable: "Beaches",
				principalColumn: "Id",
				onDelete: ReferentialAction.Restrict);
		}
	}
}
